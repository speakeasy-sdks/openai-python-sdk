"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from gpt import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FileCitation:
    file_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_id') }})
    r"""The ID of the specific File the citation is from."""
    quote: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quote') }})
    r"""The specific quote in the file."""
    


class MessageContentTextAnnotationsFileCitationObjectType(str, Enum):
    r"""Always `file_citation`."""
    FILE_CITATION = 'file_citation'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MessageContentTextAnnotationsFileCitationObject:
    r"""A citation within the message that points to a specific quote from a specific File associated with the assistant or the message. Generated when the assistant uses the \\"retrieval\\" tool to search files."""
    end_index: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_index') }})
    file_citation: FileCitation = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_citation') }})
    start_index: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_index') }})
    text: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text') }})
    r"""The text in the message content that needs to be replaced."""
    type: MessageContentTextAnnotationsFileCitationObjectType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Always `file_citation`."""
    

