"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from gpt import utils
from typing import List

class EmbeddingObject(str, Enum):
    r"""The object type, which is always \\"embedding\\"."""
    EMBEDDING = 'embedding'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Embedding:
    r"""Represents an embedding vector returned by embedding endpoint."""
    embedding: List[float] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('embedding') }})
    r"""The embedding vector, which is a list of floats. The length of vector depends on the model as listed in the [embedding guide](/docs/guides/embeddings)."""
    index: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('index') }})
    r"""The index of the embedding in the list of embeddings."""
    object: EmbeddingObject = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('object') }})
    r"""The object type, which is always \\"embedding\\"."""
    

