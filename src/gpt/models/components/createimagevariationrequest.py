"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional, Union


@dataclasses.dataclass
class CreateImageVariationRequestImage:
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})
    file_name: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'image' }})
    


class CreateImageVariationRequest2(str, Enum):
    DALL_E_2 = 'dall-e-2'

class CreateImageVariationRequestResponseFormat(str, Enum):
    r"""The format in which the generated images are returned. Must be one of `url` or `b64_json`."""
    URL = 'url'
    B64_JSON = 'b64_json'

class CreateImageVariationRequestSize(str, Enum):
    r"""The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`."""
    TWO_HUNDRED_AND_FIFTY_SIXX256 = '256x256'
    FIVE_HUNDRED_AND_TWELVEX512 = '512x512'
    ONE_THOUSAND_AND_TWENTY_FOURX1024 = '1024x1024'


@dataclasses.dataclass
class CreateImageVariationRequest:
    UNSET='__SPEAKEASY_UNSET__'
    image: CreateImageVariationRequestImage = dataclasses.field(metadata={'multipart_form': { 'file': True }})
    r"""The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square."""
    model: Optional[Union[str, CreateImageVariationRequest2]] = dataclasses.field(default=UNSET, metadata={'multipart_form': { 'field_name': 'model' }})
    r"""The model to use for image generation. Only `dall-e-2` is supported at this time."""
    n: Optional[int] = dataclasses.field(default=1, metadata={'multipart_form': { 'field_name': 'n' }})
    r"""The number of images to generate. Must be between 1 and 10. For `dall-e-3`, only `n=1` is supported."""
    response_format: Optional[CreateImageVariationRequestResponseFormat] = dataclasses.field(default=CreateImageVariationRequestResponseFormat.URL, metadata={'multipart_form': { 'field_name': 'response_format' }})
    r"""The format in which the generated images are returned. Must be one of `url` or `b64_json`."""
    size: Optional[CreateImageVariationRequestSize] = dataclasses.field(default=CreateImageVariationRequestSize.ONE_THOUSAND_AND_TWENTY_FOURX1024, metadata={'multipart_form': { 'field_name': 'size' }})
    r"""The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`."""
    user: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'user' }})
    r"""A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids)."""
    

