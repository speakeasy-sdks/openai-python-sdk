"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum


@dataclasses.dataclass
class File:
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})
    file_name: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'file' }})
    


class Purpose(str, Enum):
    r"""The intended purpose of the uploaded file.

    Use \"fine-tune\" for [Fine-tuning](/docs/api-reference/fine-tuning) and \"assistants\" for [Assistants](/docs/api-reference/assistants) and [Messages](/docs/api-reference/messages). This allows us to validate the format of the uploaded file is correct for fine-tuning.
    """
    FINE_TUNE = 'fine-tune'
    ASSISTANTS = 'assistants'


@dataclasses.dataclass
class CreateFileRequest:
    file: File = dataclasses.field(metadata={'multipart_form': { 'file': True }})
    r"""The File object (not file name) to be uploaded."""
    purpose: Purpose = dataclasses.field(metadata={'multipart_form': { 'field_name': 'purpose' }})
    r"""The intended purpose of the uploaded file.

    Use \"fine-tune\" for [Fine-tuning](/docs/api-reference/fine-tuning) and \"assistants\" for [Assistants](/docs/api-reference/assistants) and [Messages](/docs/api-reference/messages). This allows us to validate the format of the uploaded file is correct for fine-tuning.
    """
    

