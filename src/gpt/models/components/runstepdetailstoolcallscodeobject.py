"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .runstepdetailstoolcallscodeoutputimageobject import RunStepDetailsToolCallsCodeOutputImageObject
from .runstepdetailstoolcallscodeoutputlogsobject import RunStepDetailsToolCallsCodeOutputLogsObject
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from gpt import utils
from typing import List, Union


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CodeInterpreter:
    r"""The Code Interpreter tool call definition."""
    input: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('input') }})
    r"""The input to the Code Interpreter tool call."""
    outputs: List[Union[RunStepDetailsToolCallsCodeOutputLogsObject, RunStepDetailsToolCallsCodeOutputImageObject]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outputs') }})
    r"""The outputs from the Code Interpreter tool call. Code Interpreter can output one or more items, including text (`logs`) or images (`image`). Each of these are represented by a different object type."""
    


class RunStepDetailsToolCallsCodeObjectType(str, Enum):
    r"""The type of tool call. This is always going to be `code_interpreter` for this type of tool call."""
    CODE_INTERPRETER = 'code_interpreter'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RunStepDetailsToolCallsCodeObject:
    r"""Details of the Code Interpreter tool call the run step was involved in."""
    code_interpreter: CodeInterpreter = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code_interpreter') }})
    r"""The Code Interpreter tool call definition."""
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The ID of the tool call."""
    type: RunStepDetailsToolCallsCodeObjectType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of tool call. This is always going to be `code_interpreter` for this type of tool call."""
    

