"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .runstepdetailsmessagecreationobject import RunStepDetailsMessageCreationObject
from .runstepdetailstoolcallsobject import RunStepDetailsToolCallsObject
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from gpt import utils
from typing import Optional, Union

class RunStepObjectCode(str, Enum):
    r"""One of `server_error` or `rate_limit_exceeded`."""
    SERVER_ERROR = 'server_error'
    RATE_LIMIT_EXCEEDED = 'rate_limit_exceeded'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RunStepObjectLastError:
    r"""The last error associated with this run step. Will be `null` if there are no errors."""
    code: RunStepObjectCode = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})
    r"""One of `server_error` or `rate_limit_exceeded`."""
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    r"""A human-readable description of the error."""
    



@dataclasses.dataclass
class RunStepObjectMetadata:
    r"""Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long."""
    


class RunStepObjectObject(str, Enum):
    r"""The object type, which is always `thread.run.step`."""
    THREAD_RUN_STEP = 'thread.run.step'

class RunStepObjectStatus(str, Enum):
    r"""The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, or `expired`."""
    IN_PROGRESS = 'in_progress'
    CANCELLED = 'cancelled'
    FAILED = 'failed'
    COMPLETED = 'completed'
    EXPIRED = 'expired'

class RunStepObjectType(str, Enum):
    r"""The type of run step, which can be either `message_creation` or `tool_calls`."""
    MESSAGE_CREATION = 'message_creation'
    TOOL_CALLS = 'tool_calls'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RunStepObject:
    r"""Represents a step in execution of a run."""
    assistant_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assistant_id') }})
    r"""The ID of the [assistant](/docs/api-reference/assistants) associated with the run step."""
    cancelled_at: Optional[int] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancelled_at') }})
    r"""The Unix timestamp (in seconds) for when the run step was cancelled."""
    completed_at: Optional[int] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('completed_at') }})
    r"""The Unix timestamp (in seconds) for when the run step completed."""
    created_at: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at') }})
    r"""The Unix timestamp (in seconds) for when the run step was created."""
    expired_at: Optional[int] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expired_at') }})
    r"""The Unix timestamp (in seconds) for when the run step expired. A step is considered expired if the parent run is expired."""
    failed_at: Optional[int] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failed_at') }})
    r"""The Unix timestamp (in seconds) for when the run step failed."""
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The identifier of the run step, which can be referenced in API endpoints."""
    last_error: Optional[RunStepObjectLastError] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_error') }})
    r"""The last error associated with this run step. Will be `null` if there are no errors."""
    metadata: Optional[RunStepObjectMetadata] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata') }})
    r"""Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long."""
    object: RunStepObjectObject = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('object') }})
    r"""The object type, which is always `thread.run.step`."""
    run_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('run_id') }})
    r"""The ID of the [run](/docs/api-reference/runs) that this run step is a part of."""
    status: RunStepObjectStatus = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, or `expired`."""
    step_details: Union[RunStepDetailsMessageCreationObject, RunStepDetailsToolCallsObject] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('step_details') }})
    r"""The details of the run step."""
    thread_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thread_id') }})
    r"""The ID of the [thread](/docs/api-reference/threads) that was run."""
    type: RunStepObjectType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of run step, which can be either `message_creation` or `tool_calls`."""
    

