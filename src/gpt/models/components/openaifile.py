"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from gpt import utils
from typing import Optional

class OpenAIFileObject(str, Enum):
    r"""The object type, which is always `file`."""
    FILE = 'file'

class OpenAIFilePurpose(str, Enum):
    r"""The intended purpose of the file. Supported values are `fine-tune`, `fine-tune-results`, `assistants`, and `assistants_output`."""
    FINE_TUNE = 'fine-tune'
    FINE_TUNE_RESULTS = 'fine-tune-results'
    ASSISTANTS = 'assistants'
    ASSISTANTS_OUTPUT = 'assistants_output'

class OpenAIFileStatus(str, Enum):
    r"""Deprecated. The current status of the file, which can be either `uploaded`, `processed`, or `error`.

    Deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
    """
    UPLOADED = 'uploaded'
    PROCESSED = 'processed'
    ERROR = 'error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OpenAIFile:
    r"""The `File` object represents a document that has been uploaded to OpenAI."""
    bytes: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bytes') }})
    r"""The size of the file, in bytes."""
    created_at: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at') }})
    r"""The Unix timestamp (in seconds) for when the file was created."""
    filename: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filename') }})
    r"""The name of the file."""
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The file identifier, which can be referenced in the API endpoints."""
    object: OpenAIFileObject = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('object') }})
    r"""The object type, which is always `file`."""
    purpose: OpenAIFilePurpose = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('purpose') }})
    r"""The intended purpose of the file. Supported values are `fine-tune`, `fine-tune-results`, `assistants`, and `assistants_output`."""
    status: OpenAIFileStatus = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Deprecated. The current status of the file, which can be either `uploaded`, `processed`, or `error`.

    Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
    """
    status_details: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status_details'), 'exclude': lambda f: f is None }})
    r"""Deprecated. For details on why a fine-tuning training file failed validation, see the `error` field on `fine_tuning.job`.

    Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
    """
    

