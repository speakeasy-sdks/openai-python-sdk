"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .transcriptionsegment import TranscriptionSegment
from .transcriptionword import TranscriptionWord
from dataclasses_json import Undefined, dataclass_json
from gpt import utils
from typing import List, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateTranscriptionResponseVerboseJSON:
    r"""Represents a verbose json transcription response returned by model, based on the provided input."""
    duration: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('duration') }})
    r"""The duration of the input audio."""
    language: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('language') }})
    r"""The language of the input audio."""
    text: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text') }})
    r"""The transcribed text."""
    segments: Optional[List[TranscriptionSegment]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('segments'), 'exclude': lambda f: f is None }})
    r"""Segments of the transcribed text and their corresponding details."""
    words: Optional[List[TranscriptionWord]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('words'), 'exclude': lambda f: f is None }})
    r"""Extracted words and their corresponding timestamps."""
    

