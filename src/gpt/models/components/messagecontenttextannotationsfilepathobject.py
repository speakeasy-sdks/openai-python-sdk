"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from gpt import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FilePath:
    file_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_id') }})
    r"""The ID of the file that was generated."""
    


class MessageContentTextAnnotationsFilePathObjectType(str, Enum):
    r"""Always `file_path`."""
    FILE_PATH = 'file_path'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MessageContentTextAnnotationsFilePathObject:
    r"""A URL for the file that's generated when the assistant used the `code_interpreter` tool to generate a file."""
    end_index: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_index') }})
    file_path: FilePath = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_path') }})
    start_index: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_index') }})
    text: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text') }})
    r"""The text in the message content that needs to be replaced."""
    type: MessageContentTextAnnotationsFilePathObjectType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Always `file_path`."""
    

