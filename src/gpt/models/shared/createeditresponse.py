"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import completionusage as shared_completionusage
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from gpt import utils

class CreateEditResponseChoicesFinishReason(str, Enum):
    r"""The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,
    or `length` if the maximum number of tokens specified in the request was reached.
    """
    STOP = 'stop'
    LENGTH = 'length'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateEditResponseChoices:
    finish_reason: CreateEditResponseChoicesFinishReason = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finish_reason') }})
    r"""The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,
    or `length` if the maximum number of tokens specified in the request was reached.
    """
    index: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('index') }})
    r"""The index of the choice in the list of choices."""
    text: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text') }})
    r"""The edited result."""
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class CreateEditResponse:
    r"""Deprecated class: This will be removed in a future release, please migrate away from it as soon as possible."""
    choices: list[CreateEditResponseChoices] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('choices') }})
    r"""A list of edit choices. Can be more than one if `n` is greater than 1."""
    created: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created') }})
    r"""The Unix timestamp (in seconds) of when the edit was created."""
    object: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('object') }})
    r"""The object type, which is always `edit`."""
    usage: shared_completionusage.CompletionUsage = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('usage') }})
    r"""Usage statistics for the completion request."""
    

