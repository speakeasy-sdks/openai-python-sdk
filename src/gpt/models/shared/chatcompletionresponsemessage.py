"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from gpt import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ChatCompletionResponseMessageFunctionCall:
    r"""The name and arguments of a function that should be called, as generated by the model."""
    arguments: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('arguments') }})
    r"""The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function."""
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the function to call."""
    


class ChatCompletionResponseMessageRole(str, Enum):
    r"""The role of the author of this message."""
    SYSTEM = 'system'
    USER = 'user'
    ASSISTANT = 'assistant'
    FUNCTION = 'function'


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ChatCompletionResponseMessage:
    r"""A chat completion message generated by the model."""
    content: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content') }})
    r"""The contents of the message."""
    role: ChatCompletionResponseMessageRole = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role') }})
    r"""The role of the author of this message."""
    function_call: Optional[ChatCompletionResponseMessageFunctionCall] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('function_call'), 'exclude': lambda f: f is None }})
    r"""The name and arguments of a function that should be called, as generated by the model."""
    

