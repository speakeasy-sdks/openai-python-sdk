"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import listpaginatedfinetuningjobsresponse as shared_listpaginatedfinetuningjobsresponse
from typing import Optional



@dataclasses.dataclass
class ListPaginatedFineTuningJobsRequest:
    after: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'after', 'style': 'form', 'explode': True }})
    r"""Identifier for the last job from the previous pagination request."""
    limit: Optional[int] = dataclasses.field(default=20, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Number of fine-tuning jobs to retrieve."""
    




@dataclasses.dataclass
class ListPaginatedFineTuningJobsResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    list_paginated_fine_tuning_jobs_response: Optional[shared_listpaginatedfinetuningjobsresponse.ListPaginatedFineTuningJobsResponse] = dataclasses.field(default=None)
    r"""OK"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    r"""Raw HTTP response; suitable for custom response parsing"""
    

